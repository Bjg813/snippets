/////////////// Git Syntax ///////////////

// Configure user.email and user.name 
git config --global user.name "Your Name"
git config --global user.email you@example.com

// Access, add, and change globally on your computer 
git --global

// Show lines that were added in each file 
git log -p 

// View differences in files & compare current contents to staging area 
git diff 

// Compare staged changes against previous commit 
git diff --staged 

// Delete file 
git rm

// Move or rename a file 
git mv <source> <destination>

// Undo modification to a file
git checkout -- /* file name */

// Bring back deleted file
git checkout -- /* file name */

// View history of commits unique SHA (Simple Hash Algorithm) checksum number
git log 

// View the most recent commit
git checkout HEAD

// View previous commit (not the one we just made, but the one before that)
git checkout HEAD~1

// Revert existing commit
git revert

// Revert most recent commit
git revert HEAD

// Remote repo name in directory
git remote (default name for the remote repo is "origin")

// Pull files from remote repo
git pull <remote repo name if not called "origin">

// See current branch (master is default if there are no other branches in repo)
git branch

// Create local repo and add remote repo to it
git remote add <name you want local repo to be> <url of remote repo>

// Create remote repo
git remote add origin <url of remote repo>

// Add my copy of the repository as a remote
git remote add <name of remote> <url of remote repo>

// Push files upstream in repo so you dont have to define the repo on every push
git push -u origin master

// Write in README.md file
nano README

// Commit all modified changes without having to add files to be staged
git commit -a -m "Add a Comment"

// Create a file
touch <name of file you want to create>

// View what branch you are on and a list of all the available branches
git branch

// Create a new branch
git branch <name of branch you want to create>

// Switch branches
git checkout <branch name>

// Create a branch then switch to it in one line
git checkout -b <name of branch you want to create>

// Delete a branch
git branch -D <branch name you want to delete>

// Merge a branch 
git merge <branch name you want to merge with>

// View all branches
git branch -a 

// Download objects and refs from another repository
git fetch




